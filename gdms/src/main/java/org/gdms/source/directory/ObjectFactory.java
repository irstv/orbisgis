/**
 * The GDMS library (Generic Datasource Management System)
 * is a middleware dedicated to the management of various kinds of
 * data-sources such as spatial vectorial data or alphanumeric. Based
 * on the JTS library and conform to the OGC simple feature access
 * specifications, it provides a complete and robust API to manipulate
 * in a SQL way remote DBMS (PostgreSQL, H2...) or flat files (.shp,
 * .csv...).
 *
 * Gdms is distributed under GPL 3 license. It is produced by the "Atelier SIG"
 * team of the IRSTV Institute <http://www.irstv.fr/> CNRS FR 2488.
 *
 * Copyright (C) 2007-2012 IRSTV FR CNRS 2488
 *
 * This file is part of Gdms.
 *
 * Gdms is free software: you can redistribute it and/or modify it under the
 * terms of the GNU General Public License as published by the Free Software
 * Foundation, either version 3 of the License, or (at your option) any later
 * version.
 *
 * Gdms is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
 * A PARTICULAR PURPOSE. See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with
 * Gdms. If not, see <http://www.gnu.org/licenses/>.
 *
 * For more information, please consult: <http://www.orbisgis.org/>
 *
 * or contact directly:
 * info@orbisgis.org
 */
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2010.10.28 at 10:28:11 PM CEST 
//


package org.gdms.source.directory;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the org.gdms.source.directory package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private static QName _ObjectDefinition_QNAME = new QName("", "object-definition");
    private static QName _DbDefinition_QNAME = new QName("", "db-definition");
    private static QName _Definition_QNAME = new QName("", "definition");
    private static QName _FileDefinition_QNAME = new QName("", "file-definition");
    private static QName _SystemDefinition_QNAME = new QName("", "system-definition");
    private static QName _StreamDefinition_QNAME = new QName("", "stream-definition");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: org.gdms.source.directory
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link SystemDefinitionType }
     * 
     */
    public SystemDefinitionType createSystemDefinitionType() {
        return new SystemDefinitionType();
    }
    
    /**
     * Create an instance of {@link SystemDefinitionType }
     * 
     */
    public StreamDefinitionType createStreamDefinitionType() {
        return new StreamDefinitionType();
    }

    /**
     * Create an instance of {@link FileProperty }
     * 
     */
    public FileProperty createFileProperty() {
        return new FileProperty();
    }

    
     /**
     * Create an instance of {@link StreamDefinitionType }
     * 
     */
    public StreamDefinitionType createWmsDefinitionType() {
        return new StreamDefinitionType();
    }

    /**
     * Create an instance of {@link ObjectDefinitionType }
     * 
     */
    public ObjectDefinitionType createObjectDefinitionType() {
        return new ObjectDefinitionType();
    }

    /**
     * Create an instance of {@link Property }
     * 
     */
    public Property createProperty() {
        return new Property();
    }

    /**
     * Create an instance of {@link DefinitionType }
     * 
     */
    public DefinitionType createDefinitionType() {
        return new DefinitionType();
    }

    /**
     * Create an instance of {@link FileDefinitionType }
     * 
     */
    public FileDefinitionType createFileDefinitionType() {
        return new FileDefinitionType();
    }

    /**
     * Create an instance of {@link Source }
     * 
     */
    public Source createSource() {
        return new Source();
    }

    /**
     * Create an instance of {@link DbDefinitionType }
     * 
     */
    public DbDefinitionType createDbDefinitionType() {
        return new DbDefinitionType();
    }

    /**
     * Create an instance of {@link Sources }
     * 
     */
    public Sources createSources() {
        return new Sources();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ObjectDefinitionType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "object-definition")
    public JAXBElement<ObjectDefinitionType> createObjectDefinition(ObjectDefinitionType value) {
        return new JAXBElement<ObjectDefinitionType>(_ObjectDefinition_QNAME, ObjectDefinitionType.class, null, value);
    }

   
    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link StreamDefinitionType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "stream-definition")
    public JAXBElement<StreamDefinitionType> createStreamDefinition(StreamDefinitionType value) {
        return new JAXBElement<StreamDefinitionType>(_StreamDefinition_QNAME, StreamDefinitionType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DbDefinitionType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "db-definition")
    public JAXBElement<DbDefinitionType> createDbDefinition(DbDefinitionType value) {
        return new JAXBElement<DbDefinitionType>(_DbDefinition_QNAME, DbDefinitionType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DefinitionType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "definition")
    public JAXBElement<DefinitionType> createDefinition(DefinitionType value) {
        return new JAXBElement<DefinitionType>(_Definition_QNAME, DefinitionType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FileDefinitionType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "file-definition")
    public JAXBElement<FileDefinitionType> createFileDefinition(FileDefinitionType value) {
        return new JAXBElement<FileDefinitionType>(_FileDefinition_QNAME, FileDefinitionType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SystemDefinitionType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "system-definition")
    public JAXBElement<SystemDefinitionType> createSystemDefinition(SystemDefinitionType value) {
        return new JAXBElement<SystemDefinitionType>(_SystemDefinition_QNAME, SystemDefinitionType.class, null, value);
    }

}
